# Application Configuration
quarkus.application.name=autowarehouse-backend
quarkus.application.version=1.0.0

# HTTP Configuration
quarkus.http.port=8080
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000,http://localhost:5173,https://autowarehouse.vercel.app
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS,PATCH

# Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=admin
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5434/autowarehouse
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.jdbc.min-size=5

# Hibernate Configuration
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=no-file

# Flyway Migration
quarkus.flyway.migrate-at-start=true
quarkus.flyway.locations=classpath:db/migration

# JWT Configuration
mp.jwt.verify.publickey.location=${JWT_PUBLIC_KEY:META-INF/resources/publicKey.pem}
mp.jwt.verify.issuer=${JWT_ISSUER:https://autowarehouse.com}
smallrye.jwt.sign.key.location=${JWT_PRIVATE_KEY:META-INF/resources/privateKey.pem}
smallrye.jwt.new-token.lifespan=${JWT_LIFESPAN:86400}

# Redis Configuration
quarkus.redis.hosts=${REDIS_URL:redis://localhost:6379}
quarkus.redis.password=${REDIS_PASSWORD:}
quarkus.redis.database=${REDIS_DB:0}

# Kafka Configuration
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
mp.messaging.outgoing.auction-events.connector=smallrye-kafka
mp.messaging.outgoing.auction-events.topic=auction-events
mp.messaging.outgoing.auction-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.order-events.connector=smallrye-kafka
mp.messaging.outgoing.order-events.topic=order-events
mp.messaging.outgoing.order-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.notification-events.connector=smallrye-kafka
mp.messaging.outgoing.notification-events.topic=notification-events
mp.messaging.outgoing.notification-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Email Configuration
quarkus.mailer.from=${MAIL_FROM:noreply@autowarehouse.com}
quarkus.mailer.host=${MAIL_HOST:smtp.gmail.com}
quarkus.mailer.port=${MAIL_PORT:587}
quarkus.mailer.start-tls=REQUIRED
quarkus.mailer.username=${MAIL_USERNAME:}
quarkus.mailer.password=${MAIL_PASSWORD:}

# Frontend Configuration
app.frontend.url=${FRONTEND_URL:http://localhost:3000}

# Firebase Configuration
firebase.project-id=${FIREBASE_PROJECT_ID:autowarehouse-app}
firebase.storage-bucket=${FIREBASE_STORAGE_BUCKET:autowarehouse-app.appspot.com}
firebase.service-account-key=${FIREBASE_SERVICE_ACCOUNT_KEY:META-INF/resources/firebase-service-account.json}

# Google OAuth Configuration
google.oauth.client-id=${GOOGLE_OAUTH_CLIENT_ID:}
google.oauth.client-secret=${GOOGLE_OAUTH_CLIENT_SECRET:}
google.oauth.redirect-uri=${GOOGLE_OAUTH_REDIRECT_URI:http://localhost:8080/auth/google/callback}

# File Upload Configuration
quarkus.http.body.handle-file-uploads=true
quarkus.http.limits.max-body-size=10M

# OpenAPI Configuration
quarkus.smallrye-openapi.path=/swagger-ui
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger

# Health Check Configuration
quarkus.smallrye-health.root-path=/health

# Logging Configuration
quarkus.log.level=INFO
quarkus.log.category."com.autowarehouse".level=DEBUG
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Development Configuration
%dev.quarkus.log.level=DEBUG
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/autowarehouse_dev

# Test Configuration
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.sql-load-script=import-test.sql

# Production Configuration
%prod.quarkus.log.level=WARN
%prod.quarkus.hibernate-orm.log.sql=false
%prod.quarkus.datasource.jdbc.url=${DATABASE_URL}
